<!-- These XML tags are added to Excel sheet at run-time by UDIMAGIC  -->
<XMLTAGS CELLREFERENCE="A1" FROMROW="3" xmlns:UDF="TallyUDF">
	<!-- Specifies that this (i.e Column as mentioned above) is the key field -->
	<COLUMNNAME.LIST>
		<COLUMNNAME>ID</COLUMNNAME>
		<COLUMNNAME>NAME</COLUMNNAME>
	</COLUMNNAME.LIST>
	<!-- Create VOUCHERTYPE Master -->
	<MASTER TYPE="VOUCHERTYPE">
		<NAME.LIST TYPE="String">
			<NAME COLUMNREFERENCE="C"/>
		</NAME.LIST>
		<PARENT COLUMNREFERENCE="B"/>
		<!-- Is deemed positive not required -->
		<NUMBERINGMETHOD>Manual</NUMBERINGMETHOD>
	</MASTER>
	<!-- Create Sales/Purchase Ledgers -->
	<MASTER TYPE="LEDGER">
		<NAME.LIST>
			<NAME FORMULA="=if(len(trim(BH#))&gt;0,BH#,if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;debit note&quot;\125,0))),&quot;PURCHASE &quot;,&quot;SALE &quot;) &amp; (BU#+BW#+BY#) &amp; &quot;%&quot;)"/>
		</NAME.LIST>
		<PARENT SKIP="=Not(len(trim(DJ#))=0)" FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;debit note&quot;\125,0))),&quot;Purchase Accounts&quot;,&quot;Sales Accounts&quot;)"/>
		<PARENT COLUMNREFERENCE="DJ"/>
		<TAXTYPE>Others</TAXTYPE>
		<ISBILLWISEON>No</ISBILLWISEON>
		<ISCOSTCENTRESON FORMULA="=if(len(trim(BJ#))=0,&quot;No&quot;,&quot;Yes&quot;)"/>
		<AFFECTSSTOCK FORMULA="=if(And(len(trim(AO#))=0,len(trim(AP#))=0),&quot;No&quot;,&quot;Yes&quot;)"/>
		<USEFORVAT>No</USEFORVAT>
		<GSTAPPLICABLE SKIP="=Round(BU#+BW#+BY#+CA#+CC#,2)=0" FORMULA="=&quot;~[~ Applicable&quot;"/>
		<!-- Type of supply : Goods or Services -->
		<GSTTYPEOFSUPPLY FORMULA="=if(And(len(trim(AO#))=0,len(trim(AP#))=0),&quot;Services&quot;,&quot;Goods&quot;)"/>
	</MASTER>
	<!-- Create Party LEDGER Masters -->
	<MASTER TYPE="LEDGER">
		<NAME.LIST>
			<NAME COLUMNREFERENCE="H"/>
			<NAME COLUMNREFERENCE="I"/>
		</NAME.LIST>
		<OLDNAME FORMULA="=if(len(trim(I#))=0,H#,I#)"/>
		<PARENT SKIP="=Not(len(trim(DI#))=0)" FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;debit note&quot;\125,0))),&quot;Sundry Creditors&quot;,&quot;Sundry Debtors&quot;)"/>
		<PARENT COLUMNREFERENCE="DI"/>
		<ISCOSTCENTRESON>No</ISCOSTCENTRESON>
		<ADDITIONALNAME COLUMNREFERENCE="H"/>
		<ISBILLWISEON>Yes</ISBILLWISEON>
		<!-- GST fields for PARTY LEDGER -->
		<GSTREGISTRATIONTYPE FORMULA="=if(len(trim(J#))=0,&quot;Unregistered&quot;,&quot;Regular&quot;)"/>
		<!-- GSTIN / UIN -->
		<PARTYGSTIN FORMULA="=trim(J#)"/>
		<COUNTRYNAME SKIP="=len(trim(K#))=0">India</COUNTRYNAME>
		<COUNTRYOFRESIDENCE SKIP="=len(trim(K#))=0">India</COUNTRYOFRESIDENCE>
		<!-- 2017-09-14: STATENAME is converted to proper-case  -->
		<STATENAME FORMULA="=proper(trim(K#))"/>
		<LEDSTATENAME FORMULA="=proper(trim(K#))"/>
	</MASTER>

	<!-- Create Trade discount Master -->
	<MASTER TYPE="LEDGER">
	  <NAME.LIST>
	    <NAME FORMULA="=if(len(trim(BA#))=0,&quot;Discount&quot;,BA#)"/>
	  </NAME.LIST>
	  <PARENT>Indirect Expenses</PARENT>
	  <ISCOSTCENTRESON>No</ISCOSTCENTRESON>
	  <AFFECTSSTOCK>No</AFFECTSSTOCK>
	  <GSTAPPLICABLE FORMULA="=&quot;~[~ Not Applicable&quot;"/>
	  <UDF:VATDEALERNATURE.LIST DESC="`VATDealerNature`" ISLIST="YES" TYPE="String" INDEX="10031">
	   <UDF:VATDEALERNATURE DESC="`VATDealerNature`">Discount</UDF:VATDEALERNATURE>
	  </UDF:VATDEALERNATURE.LIST>
	</MASTER>

	<!-- Create IGST TAX LEDGER Master -->
	<MASTER TYPE="LEDGER">
		<NAME.LIST>
			<NAME FORMULA="=if(len(trim(CE#))&gt;0,CE#,if(Or(IsError(Round(BU#,2)),len(trim(BU#))=0,BU#=0),&quot;&quot;,&quot;IGST &quot; &amp; BU# &amp; &quot;%&quot;))"/>
		</NAME.LIST>
		<PARENT SKIP="=Not(len(trim(DK#))=0)">Duties &amp; Taxes</PARENT>
		<PARENT COLUMNREFERENCE="DK"/>
		<ISCOSTCENTRESON>No</ISCOSTCENTRESON>
		<AFFECTSSTOCK>No</AFFECTSSTOCK>
		<GSTAPPLICABLE FORMULA="=&quot;~[~ Applicable&quot;"/>
		<GSTDUTYHEAD>Integrated Tax</GSTDUTYHEAD>
		<TAXTYPE>GST</TAXTYPE>
	</MASTER>
	<!-- Create CGST TAX LEDGER Master -->
	<MASTER TYPE="LEDGER">
		<NAME.LIST>
			<NAME FORMULA="=if(len(trim(CF#))&gt;0,CF#,if(Or(IsError(Round(BW#,2)),len(trim(BW#))=0,BW#=0),&quot;&quot;,&quot;CGST &quot; &amp; BW# &amp; &quot;%&quot;))"/>
		</NAME.LIST>
		<PARENT SKIP="=Not(len(trim(DK#))=0)">Duties &amp; Taxes</PARENT>
		<PARENT COLUMNREFERENCE="DK"/>
		<ISCOSTCENTRESON>No</ISCOSTCENTRESON>
		<AFFECTSSTOCK>No</AFFECTSSTOCK>
		<GSTAPPLICABLE FORMULA="=&quot;~[~ Applicable&quot;"/>
		<GSTDUTYHEAD>Central Tax</GSTDUTYHEAD>
		<TAXTYPE>GST</TAXTYPE>
	</MASTER>
	<!-- Create SGST TAX LEDGER Master -->
	<MASTER TYPE="LEDGER">
		<NAME.LIST>
			<NAME FORMULA="=if(len(trim(CG#))&gt;0,CG#,if(Or(IsError(Round(BY#,2)),len(trim(BY#))=0,BY#=0),&quot;&quot;,&quot;SGST &quot; &amp; BY# &amp; &quot;%&quot;))"/>
		</NAME.LIST>
		<PARENT SKIP="=Not(len(trim(DK#))=0)">Duties &amp; Taxes</PARENT>
		<PARENT COLUMNREFERENCE="DK"/>
		<ISCOSTCENTRESON>No</ISCOSTCENTRESON>
		<AFFECTSSTOCK>No</AFFECTSSTOCK>
		<GSTAPPLICABLE FORMULA="=&quot;~[~ Applicable&quot;"/>
		<GSTDUTYHEAD>State Tax</GSTDUTYHEAD>
		<TAXTYPE>GST</TAXTYPE>
		<!-- TAXRATE not included as it may create confusion -->
		<!-- <RATEOFTAXCALCULATION COLUMNREFERENCE="BY"/> -->
	</MASTER>
	<!-- Create UT TAX LEDGER Master -->
	<MASTER TYPE="LEDGER">
		<NAME.LIST>
			<NAME FORMULA="=if(len(trim(CH#))&gt;0,CH#,if(Or(IsError(Round(CA#,2)),len(trim(CA#))=0,CA#=0),&quot;&quot;,&quot;UT &quot; &amp; CA# &amp; &quot;%&quot;))"/>
		</NAME.LIST>
		<PARENT SKIP="=Not(len(trim(DK#))=0)">Duties &amp; Taxes</PARENT>
		<PARENT COLUMNREFERENCE="DK"/>
		<ISCOSTCENTRESON>No</ISCOSTCENTRESON>
		<AFFECTSSTOCK>No</AFFECTSSTOCK>
		<GSTAPPLICABLE FORMULA="=&quot;~[~ Applicable&quot;"/>
		<GSTDUTYHEAD>UT Tax</GSTDUTYHEAD>
		<TAXTYPE>GST</TAXTYPE>
	</MASTER>
	<!-- Create Cess LEDGER Master -->
	<MASTER TYPE="LEDGER">
		<NAME.LIST>
			<NAME FORMULA="=if(len(trim(CI#))&gt;0,CI#,if(Or(IsError(Round(CC#,2)),len(trim(CC#))=0,CC#=0),&quot;&quot;,&quot;Cess &quot; &amp; CC# &amp; &quot;%&quot;))"/>
		</NAME.LIST>
		<PARENT SKIP="=Not(len(trim(DK#))=0)">Duties &amp; Taxes</PARENT>
		<PARENT COLUMNREFERENCE="DK"/>
		<ISCOSTCENTRESON>No</ISCOSTCENTRESON>
		<AFFECTSSTOCK>No</AFFECTSSTOCK>
		<GSTAPPLICABLE FORMULA="=&quot;~[~ Applicable&quot;"/>
		<GSTDUTYHEAD>Cess</GSTDUTYHEAD>
		<TAXTYPE>GST</TAXTYPE>
	</MASTER>
	<!-- Create Other LEDGERs before taxes -->
	<MASTER TYPE="LEDGER">
		<NAME.LIST>
			<NAME COLUMNREFERENCE="BK"/>
		</NAME.LIST>
		<PARENT>Indirect Expenses</PARENT>
		<ISCOSTCENTRESON>No</ISCOSTCENTRESON>
		<TAXTYPE>Others</TAXTYPE>
		<GSTAPPLICABLE>~[~ Not Applicable</GSTAPPLICABLE>
		<APPROPRIATEFOR>GST</APPROPRIATEFOR>
		<GSTAPPROPRIATETO>Both</GSTAPPROPRIATETO>
		<EXCISEALLOCTYPE>Based on Value</EXCISEALLOCTYPE>
		<ISEXCISEAPPLICABLE>Yes</ISEXCISEAPPLICABLE>
	</MASTER>
	<!-- Create Other LEDGERs before taxes -->
	<MASTER TYPE="LEDGER">
		<NAME.LIST>
			<NAME COLUMNREFERENCE="BM"/>
		</NAME.LIST>
		<PARENT>Indirect Expenses</PARENT>
		<ISCOSTCENTRESON>No</ISCOSTCENTRESON>
		<TAXTYPE>Others</TAXTYPE>
		<GSTAPPLICABLE>~[~ Not Applicable</GSTAPPLICABLE>
		<APPROPRIATEFOR>GST</APPROPRIATEFOR>
		<GSTAPPROPRIATETO>Both</GSTAPPROPRIATETO>
		<EXCISEALLOCTYPE>Based on Value</EXCISEALLOCTYPE>
		<ISEXCISEAPPLICABLE>Yes</ISEXCISEAPPLICABLE>
	</MASTER>
	<!-- Create Other LEDGERs before taxes -->
	<MASTER TYPE="LEDGER">
		<NAME.LIST>
			<NAME COLUMNREFERENCE="BO"/>
		</NAME.LIST>
		<PARENT>Indirect Expenses</PARENT>
		<ISCOSTCENTRESON>No</ISCOSTCENTRESON>
		<TAXTYPE>Others</TAXTYPE>
		<GSTAPPLICABLE>~[~ Not Applicable</GSTAPPLICABLE>
		<APPROPRIATEFOR>GST</APPROPRIATEFOR>
		<GSTAPPROPRIATETO>Both</GSTAPPROPRIATETO>
		<EXCISEALLOCTYPE>Based on Value</EXCISEALLOCTYPE>
		<ISEXCISEAPPLICABLE>Yes</ISEXCISEAPPLICABLE>
	</MASTER>
	<!-- Create Other LEDGERs before taxes -->
	<MASTER TYPE="LEDGER">
		<NAME.LIST>
			<NAME COLUMNREFERENCE="BQ"/>
		</NAME.LIST>
		<PARENT>Indirect Expenses</PARENT>
		<ISCOSTCENTRESON>No</ISCOSTCENTRESON>
		<TAXTYPE>Others</TAXTYPE>
		<GSTAPPLICABLE>~[~ Not Applicable</GSTAPPLICABLE>
		<APPROPRIATEFOR>GST</APPROPRIATEFOR>
		<GSTAPPROPRIATETO>Both</GSTAPPROPRIATETO>
		<EXCISEALLOCTYPE>Based on Value</EXCISEALLOCTYPE>
		<ISEXCISEAPPLICABLE>Yes</ISEXCISEAPPLICABLE>
	</MASTER>
	<!-- Create Other LEDGERs before taxes -->
	<MASTER TYPE="LEDGER">
		<NAME.LIST>
			<NAME COLUMNREFERENCE="BS"/>
		</NAME.LIST>
		<PARENT>Indirect Expenses</PARENT>
		<ISCOSTCENTRESON>No</ISCOSTCENTRESON>
		<TAXTYPE>Others</TAXTYPE>
		<GSTAPPLICABLE>~[~ Not Applicable</GSTAPPLICABLE>
		<APPROPRIATEFOR>GST</APPROPRIATEFOR>
		<GSTAPPROPRIATETO>Both</GSTAPPROPRIATETO>
		<EXCISEALLOCTYPE>Based on Value</EXCISEALLOCTYPE>
		<ISEXCISEAPPLICABLE>Yes</ISEXCISEAPPLICABLE>
	</MASTER>
	<!-- Create Other LEDGERs after taxes -->
	<MASTER TYPE="LEDGER">
		<NAME.LIST>
			<NAME COLUMNREFERENCE="CJ"/>
		</NAME.LIST>
		<PARENT>Indirect Expenses</PARENT>
		<ISCOSTCENTRESON>No</ISCOSTCENTRESON>
	</MASTER>
	<!-- Create Other LEDGERs after taxes -->
	<MASTER TYPE="LEDGER">
		<NAME.LIST>
			<NAME COLUMNREFERENCE="CL"/>
		</NAME.LIST>
		<PARENT>Indirect Expenses</PARENT>
		<ISCOSTCENTRESON>No</ISCOSTCENTRESON>
	</MASTER>
	<!-- Create Other LEDGERs after taxes -->
	<MASTER TYPE="LEDGER">
		<NAME.LIST>
			<NAME COLUMNREFERENCE="CN"/>
		</NAME.LIST>
		<PARENT>Indirect Expenses</PARENT>
		<ISCOSTCENTRESON>No</ISCOSTCENTRESON>
	</MASTER>
	<!-- Create Other LEDGERs after taxes -->
	<MASTER TYPE="LEDGER">
		<NAME.LIST>
			<NAME COLUMNREFERENCE="CP"/>
		</NAME.LIST>
		<PARENT>Indirect Expenses</PARENT>
		<ISCOSTCENTRESON>No</ISCOSTCENTRESON>
	</MASTER>
	<!-- Create Other LEDGERs after taxes -->
	<MASTER TYPE="LEDGER">
		<NAME.LIST>
			<NAME COLUMNREFERENCE="CR"/>
		</NAME.LIST>
		<PARENT>Indirect Expenses</PARENT>
		<ISCOSTCENTRESON>No</ISCOSTCENTRESON>
	</MASTER>
	<!-- Create Round Off LEDGER Master -->
	<MASTER TYPE="LEDGER">
		<NAME.LIST>
			<NAME FORMULA="=if(len(trim(DS#))=0,&quot;Round Off&quot;,DS#)"/>
		</NAME.LIST>
		<PARENT>Indirect Expenses</PARENT>
		<ISCOSTCENTRESON>No</ISCOSTCENTRESON>
	</MASTER>
	<!-- Cost Category -->
	<MASTER TYPE="COSTCATEGORY">
		<NAME.LIST>
			<NAME COLUMNREFERENCE="BI"/>
		</NAME.LIST>
		<ALLOCATEREVENUE>Yes</ALLOCATEREVENUE>
		<ALLOCATENONREVENUE>Yes</ALLOCATENONREVENUE>
	</MASTER>
	<!-- Cost Centre -->
	<MASTER TYPE="COSTCENTRE">
		<NAME.LIST>
			<NAME COLUMNREFERENCE="BJ"/>
		</NAME.LIST>
		<CATEGORY SKIP="=Len(trim(BI#))=0" COLUMNREFERENCE="BI"/>
		<REVENUELEDFOROPBAL>No</REVENUELEDFOROPBAL>
		<AFFECTSSTOCK>No</AFFECTSSTOCK>
	</MASTER>
	<!-- Create UNIT Master -->
	<MASTER TYPE="UNIT">
		<NAME COLUMNREFERENCE="AS"/>
		<ISSIMPLEUNIT>Yes</ISSIMPLEUNIT>
		<GSTREPUOM SKIP="=Not(trim(AS#)=&quot;nos&quot;)">NOS-NUMBERS</GSTREPUOM>
		<GSTREPUOM SKIP="=Not(trim(AS#)=&quot;kgs&quot;)">KGS-KILOGRAMS</GSTREPUOM>
	</MASTER>
	<!-- Create Godown Masters -->
	<MASTER TYPE="GODOWN">
		<NAME COLUMNREFERENCE="AN"/>
		<PARENT/>
	</MASTER>
	<!-- Create STOCKITEM Masters -->
	<MASTER TYPE="STOCKITEM">
		<OLDNAME FORMULA="=if(len(trim(AP#))=0,AO#,AP#)"/>
		<!-- Overwrite existing ITEMs -->
		<IMPORTDUPS FORMULA="=if(And(Not(IsError(DT#)),len(trim(DT#))&gt;0,DT#=&quot;yes&quot;),&quot;Modify with new data&quot;,&quot;Ignore Duplicates&quot;)"/>
		<!-- Create new item with Name or PartNo -->
		<NAME FORMULA="=if(len(trim(AO#))=0,AP#,AO#)"/>
		<!-- SKIP if both Name and Part No are empty -->
		<ADDITIONALNAME SKIP="=Or(len(trim(AP#))=0,len(trim(AO#))=0)" COLUMNREFERENCE="AP"/>
		<BASEUNITS COLUMNREFERENCE="AS"/>
		<PARENT COLUMNREFERENCE="DL"/>
		<ISBATCHWISEON FORMULA="=if((len(trim(BE#))+len(trim(BF#))+len(trim(BG#)))=0,&quot;&quot;,&quot;Yes&quot;)"/>
		<HASMFGDATE FORMULA="=if(len(trim(BF#))=0,&quot;&quot;,&quot;Yes&quot;)"/>
		<ISPERISHABLEON FORMULA="=if(len(trim(BG#))=0,&quot;&quot;,&quot;Yes&quot;)"/>
		<!-- GST details -->
		<GSTAPPLICABLE SKIP="=And(len(trim(BU#))=0,len(trim(BW#))=0,len(trim(BY#))=0)" FORMULA="=&quot;~[~ Applicable&quot;"/>
		<!-- Type of supply : Hard coded -->
		<GSTTYPEOFSUPPLY>Goods</GSTTYPEOFSUPPLY>
		<GSTDETAILS.LIST SKIP="=And(len(trim(BU#))=0,len(trim(BW#))=0,len(trim(BY#))=0)">
			<!-- Hard coded -->
			<APPLICABLEFROM>20170701</APPLICABLEFROM>
			<!-- Hard coded -->
			<CALCULATIONTYPE>On Value</CALCULATIONTYPE>
			<!-- HSN Desc -->
			<HSN COLUMNREFERENCE="AQ"/>
			<!-- HSN Code -->
			<HSNCODE COLUMNREFERENCE="AR"/>
			<TAXABILITY FORMULA="=If(BU#+BW#+BY#+CA#+CC#&gt;0,&quot;Taxable&quot;,&quot;Exempt&quot;)"/>
			<STATEWISEDETAILS.LIST>
				<STATENAME>~[~ Any</STATENAME>
				<RATEDETAILS.LIST>
					<GSTRATEDUTYHEAD>Central Tax</GSTRATEDUTYHEAD>
					<GSTRATEVALUATIONTYPE>Based on Value</GSTRATEVALUATIONTYPE>
					<GSTRATE FORMULA="=If(BW#&gt;0,BW#,If(BU#&gt;0,Round(BU#/2,2),0))"/>
				</RATEDETAILS.LIST>
				<RATEDETAILS.LIST>
					<GSTRATEDUTYHEAD FORMULA="=if(And(Round(CA#,2)=0,Round(CB#,2)=0),&quot;State Tax&quot;,&quot;UT Tax&quot;)"/>
					<GSTRATEVALUATIONTYPE>Based on Value</GSTRATEVALUATIONTYPE>
					<GSTRATE SKIP="=And(Round(BY#,2)=0,Round(BZ#,2)=0,Not(And(Round(CA#,2)=0,Round(CB#,2)=0)))" FORMULA="=If(BY#&gt;0,BY#,If(BU#&gt;0,Round(BU#/2,2),0))"/>
					<GSTRATE SKIP="=And(Round(CA#,2)=0,Round(CB#,2)=0)" FORMULA="=If(CA#&gt;0,CA#,If(BU#&gt;0,Round(BU#/2,2),0))"/>
				</RATEDETAILS.LIST>
				<RATEDETAILS.LIST>
					<GSTRATEDUTYHEAD>Integrated Tax</GSTRATEDUTYHEAD>
					<GSTRATEVALUATIONTYPE>Based on Value</GSTRATEVALUATIONTYPE>
					<GSTRATE FORMULA="=If(BU#&gt;0,BU#,BW#+BY#)"/>
				</RATEDETAILS.LIST>
				<RATEDETAILS.LIST>
					<GSTRATEDUTYHEAD>Cess</GSTRATEDUTYHEAD>
					<GSTRATEVALUATIONTYPE>Based on Value</GSTRATEVALUATIONTYPE>
					<GSTRATE FORMULA="=if(Round(CD#,2)=0,0,CC#)"/>
				</RATEDETAILS.LIST>
			</STATEWISEDETAILS.LIST>
			<TEMPGSTDETAILSLABRATES.LIST>
			</TEMPGSTDETAILSLABRATES.LIST>
		</GSTDETAILS.LIST>
	</MASTER>
	<VOUCHER8 SKIP="=DU#=&quot;cancel&quot;"  SUPPRESS_ERROR="NO ENTRIES IN VOUCHER">
		<GUID FORMULA="=+&quot;udi-H6W7QN-&quot; &amp; A# &amp; &quot;-&quot; &amp; C# &amp; &quot;-&quot; &amp; E#"/>
		<DATE COLUMNREFERENCE="E"/>
		<EFFECTIVEDATE COLUMNREFERENCE="E"/>
		<CLASSNAME COLUMNREFERENCE="DM"/>
		<VOUCHERTYPENAME COLUMNREFERENCE="C"/>
		<VOUCHERNUMBER COLUMNREFERENCE="D"/>
		<REFERENCE COLUMNREFERENCE="F"/>
		<NARRATION COLUMNREFERENCE="DQ"/>
		<ISINVOICE>Yes</ISINVOICE>
		<PERSISTEDVIEW FORMULA="=if(And(len(trim(AO#))=0,len(trim(AP#))=0),&quot;Accounting Voucher View&quot;,&quot;Invoice Voucher View&quot;)"/>
		<!-- Actual vs Billed qty -->
		<DIFFACTUALQTY FORMULA="=if(len(trim(AT#))=0,&quot;No&quot;,&quot;Yes&quot;)"/>
		<!-- For Purchase -->
		<UDF:REFERENCEDATE.LIST DESC="`ReferenceDate`" ISLIST="YES" TYPE="Date">
			<UDF:REFERENCEDATE DESC="`ReferenceDate`" COLUMNREFERENCE="G"/>
		</UDF:REFERENCEDATE.LIST>
		<REFERENCEDATE COLUMNREFERENCE="G"/>
		<!-- 2017-09-14: Update GSTIN -->
		<PARTYGSTIN FORMULA="=if(len(trim(L#))=0,trim(J#),&quot;&quot;)"/>
		<PARTYGSTIN FORMULA="=trim(U#)"/>
		<!-- 2017-09-14: STATENAME is converted to proper-case  -->
		<STATENAME FORMULA="=proper(if(len(trim(L#))=0,trim(K#),&quot;&quot;))"/>
		<STATENAME FORMULA="=proper(trim(R#))"/>
		<PLACEOFSUPPLY COLUMNREFERENCE="S"/>
		<GSTREGISTRATIONTYPE SKIP="=Not(len(trim(T#))=0)" FORMULA="=if(len(trim(J#))=0,&quot;Unregistered&quot;,&quot;Regular&quot;)"/>
		<GSTREGISTRATIONTYPE COLUMNREFERENCE="T"/>
		<PARTYLEDGERNAME COLUMNREFERENCE="H"/>
		<BASICBASEPARTYNAME COLUMNREFERENCE="H"/>
		<!-- If Consignee details are NOT empty, then pickup buyer details here -->
		<PARTYNAME FORMULA="=if(len(trim(L#))=0,H#,L#)"/>
		<ADDRESS.LIST TYPE="String" SKIP="=And(len(trim(V#))=0,len(trim(W#))=0,len(trim(X#))=0,len(trim(Y#))=0,len(trim(Z#))=0,len(trim(AA#))=0)">
			<ADDRESS COLUMNREFERENCE="M"/>
			<ADDRESS COLUMNREFERENCE="N"/>
			<ADDRESS COLUMNREFERENCE="O"/>
			<ADDRESS COLUMNREFERENCE="P"/>
			<ADDRESS COLUMNREFERENCE="Q"/>
		</ADDRESS.LIST>
		<!-- If Consignee details are empty, then pickup buyer details here -->
		<BASICBUYERNAME FORMULA="=if(len(trim(V#))=0,if(len(trim(L#))=0,H#,L#),V#)"/>
		<BASICBUYERADDRESS.LIST TYPE="String" SKIP="=And(len(trim(V#))=0,len(trim(W#))=0,len(trim(X#))=0,len(trim(Y#))=0,len(trim(Z#))=0,len(trim(AA#))=0,len(trim(M#))=0,len(trim(N#))=0,len(trim(O#))=0,len(trim(P#))=0,len(trim(Q#))=0)">
			<BASICBUYERADDRESS FORMULA="=if(len(trim(V#))=0,M#,W#)"/>
			<BASICBUYERADDRESS FORMULA="=if(len(trim(V#))=0,N#,X#)"/>
			<BASICBUYERADDRESS FORMULA="=if(len(trim(V#))=0,O#,Y#)"/>
			<BASICBUYERADDRESS FORMULA="=if(len(trim(V#))=0,P#,Z#)"/>
			<BASICBUYERADDRESS FORMULA="=if(len(trim(V#))=0,Q#,AA#)"/>
		</BASICBUYERADDRESS.LIST>
		<CONSIGNEESTATENAME COLUMNREFERENCE="AB"/>
		<CONSIGNEEGSTIN COLUMNREFERENCE="AC"/>
		<!-- For Sales and Purchase only only -->
		<INVOICEDELNOTES.LIST SCROLL="YES" SKIP="=not(And(Or(len(trim(AF#))&gt;0,len(trim(AG#))&gt;0),Or(trim(lower(B#[1]))=&quot;sales&quot;,trim(lower(B#[1]))=&quot;purchase&quot;)))">
			<BASICSHIPPINGDATE COLUMNREFERENCE="AG"/>
			<BASICSHIPDELIVERYNOTE COLUMNREFERENCE="AF"/>
		</INVOICEDELNOTES.LIST>
		<!-- Order list -->
		<!-- For Delivery Note, Sales Invoice, Receipt Note, Purchase Invoice -->
		<INVOICEORDERLIST.LIST SCROLL="YES" SKIP="=Or(len(trim(AD#))=0,trim(lower(B#[1]))=&quot;sales order&quot;,trim(lower(B#[1]))=&quot;purchase order&quot;)">
			<BASICORDERDATE COLUMNREFERENCE="AE"/>
			<BASICPURCHASEORDERNO COLUMNREFERENCE="AD"/>
		</INVOICEORDERLIST.LIST>
		<!-- Order details -->
		<BASICDUEDATEOFPYMT COLUMNREFERENCE="AH"/>
		<BASICORDERREF COLUMNREFERENCE="AI"/>
		<BASICORDERTERMS.LIST TYPE="String">
			<BASICORDERTERMS COLUMNREFERENCE="AJ"/>
		</BASICORDERTERMS.LIST>
		<!-- Despatch details -->
		<!-- Despatch Document No -->
		<BASICSHIPDOCUMENTNO COLUMNREFERENCE="AK"/>
		<!-- Despatch through -->
		<BASICSHIPPEDBY COLUMNREFERENCE="AL"/>
		<!-- Destination -->
		<BASICFINALDESTINATION COLUMNREFERENCE="AM"/>
		<!-- Other GST details -->
		<GSTNATUREOFRETURN SKIP="=IsError(Match(trim(B#[1]),\123&quot;credit note&quot;,&quot;debit note&quot;\125,0))" FORMULA="=if(len(trim(DE#))=0,&quot;01-Sales Return&quot;,DE#)"/>
		<VATPARTYTRANSRETURNNUMBER FORMULA="=if(len(trim(DF#))=0,F#,DF#)"/>
		<VATPARTYTRANSRETURNDATE FORMULA="=if(len(trim(DG#))=0,G#,DG#)"/>
		<URDORIGINALSALEVALUE COLUMNREFERENCE="DH"/>
		<!-- Other settings -->
		<ISCANCELLED COLUMNREFERENCE="DN"/>
		<ISOPTIONAL COLUMNREFERENCE="DO"/>
		<!-- Tax Classification at Voucher level -->
		<ISGSTOVERRIDDEN SKIP="=len(trim(CX#))=0" SCROLL="YES" FORMULA="=if(len(trim(CX#))=0,&quot;No&quot;,&quot;Yes&quot;)"/>
		<!-- Party Ledger -->
		<LEDGERENTRIES.LIST ALTERNATETAGNAME="=if(And(len(trim(AO#[1]))=0,len(trim(AP#[1]))=0),&quot;ALLLEDGERENTRIES.LIST&quot;,&quot;&quot;)">
			<LEDGERNAME FORMULA="=if(len(trim(I#))=0,H#,I#)"/>
			<ISDEEMEDPOSITIVE FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),&quot;No&quot;,&quot;Yes&quot;)"/>
			<AMOUNT FORMULA="=Round({Round(AX#,2)-Round(AZ#,2)+Round(BV#,2)+Round(BX#,2)+Round(BZ#,2)+Round(CB#,2)+Round(CD#,2)}+{Round(BL#+BN#+BP#+BR#+BT#,2)}+{Round(CK#+CM#+CO#+CQ#+CS#,2)},if(trim(DR#)=&quot;yes&quot;,0,2))*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),1,-1)"/>
			<BILLALLOCATIONS.LIST SKIP="=Len(trim(CU#))=0" SCROLL="YES">
				<NAME COLUMNREFERENCE="CU"/>
				<BILLTYPE COLUMNREFERENCE="CT"/>
				<BILLCREDITPERIOD COLUMNREFERENCE="CW"/>
				<AMOUNT FORMULA="=Round(CV#,2)*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),1,-1)"/>
			</BILLALLOCATIONS.LIST>
			<BILLALLOCATIONS.LIST SKIP="=Or(Len(trim(CU#))&gt;0,Len(trim(D#))=0)">
				<NAME FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;debit note&quot;\125,0))),if(len(trim(F#))=0,D#,F#),D#)"/>
				<BILLTYPE>New Ref</BILLTYPE>
				<AMOUNT FORMULA="=Round({Round(AX#,2)-Round(AZ#,2)+Round(BV#,2)+Round(BX#,2)+Round(BZ#,2)+Round(CB#,2)+Round(CD#,2)}+{Round(BL#+BN#+BP#+BR#+BT#,2)}+{Round(CK#+CM#+CO#+CQ#+CS#,2)},if(trim(DR#)=&quot;yes&quot;,0,2))*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),1,-1)"/>
			</BILLALLOCATIONS.LIST>
		</LEDGERENTRIES.LIST>
		<!-- Sales/Purchase Ledger -->
		<LEDGERENTRIES.LIST SCROLL="YES" SKIP="=Not(And(len(trim(AO#))=0,len(trim(AP#))=0,Round(AX#,2)&lt;&gt;0))" ALTERNATETAGNAME="=if(And(len(trim(AO#[1]))=0,len(trim(AP#[1]))=0),&quot;ALLLEDGERENTRIES.LIST&quot;,&quot;&quot;)">
			<LEDGERNAME FORMULA="=if(len(trim(BH#))&gt;0,BH#,if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;debit note&quot;\125,0))),&quot;PURCHASE&quot;,&quot;SALE&quot;))"/>
			<ISDEEMEDPOSITIVE FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),&quot;Yes&quot;,&quot;No&quot;)"/>
			<AMOUNT FORMULA="=Round(AX#,2)*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),-1,1)"/>
			<!-- 
        Tax Classification - Override at Voucher level 
        Applicable to Sales/Purchase with Stockitems only as tested in Tally ERP 9 Release 6.1
        -->
			<GSTOVRDNNATURE COLUMNREFERENCE="CX"/>
			<GSTOVRDNASSESSABLEVALUE SKIP="=Round(DD#,2)=0" FORMULA="=Round(DD#,2)*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),-1,1)"/>
			<RATEDETAILS.LIST>
				<GSTRATEDUTYHEAD>Integrated Tax</GSTRATEDUTYHEAD>
				<GSTRATEVALUATIONTYPE>Based on Value</GSTRATEVALUATIONTYPE>
				<GSTRATE COLUMNREFERENCE="CY"/>
			</RATEDETAILS.LIST>
			<RATEDETAILS.LIST>
				<GSTRATEDUTYHEAD>Central Tax</GSTRATEDUTYHEAD>
				<GSTRATEVALUATIONTYPE>Based on Value</GSTRATEVALUATIONTYPE>
				<GSTRATE COLUMNREFERENCE="CZ"/>
			</RATEDETAILS.LIST>
			<RATEDETAILS.LIST>
				<GSTRATEDUTYHEAD FORMULA="=if(Round(DB#,2)=0,&quot;State Tax&quot;,&quot;UT Tax&quot;)"/>
				<GSTRATEVALUATIONTYPE>Based on Value</GSTRATEVALUATIONTYPE>
				<GSTRATE FORMULA="=if(Round(DB#,2)=0,DA#,DB#)"/>
			</RATEDETAILS.LIST>
			<RATEDETAILS.LIST>
				<GSTRATEDUTYHEAD>Cess</GSTRATEDUTYHEAD>
				<GSTRATEVALUATIONTYPE>Based on Value</GSTRATEVALUATIONTYPE>
				<GSTRATE COLUMNREFERENCE="DC"/>
			</RATEDETAILS.LIST>
		</LEDGERENTRIES.LIST>

		<!-- Trade discount before taxes -->
		<LEDGERENTRIES.LIST  SKIP="={Round(AZ#,2)}=0" ALTERNATETAGNAME="=if(And(len(trim(AO#[1]))=0,len(trim(AP#[1]))=0),&quot;ALLLEDGERENTRIES.LIST&quot;,&quot;&quot;)">
	    <LEDGERNAME FORMULA="=if(len(trim(BA#))=0,&quot;Discount&quot;,BA#)"/>
			<ISDEEMEDPOSITIVE FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),&quot;Yes&quot;,&quot;No&quot;)"/>
			<AMOUNT FORMULA="={Round(AZ#,2)}*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),1,-1)"/>
		</LEDGERENTRIES.LIST>

		<!-- Ledger1 before taxes -->
		<LEDGERENTRIES.LIST GROUPBY="=trim(BK#)" SKIP="={Round(BL#,2)}=0" ALTERNATETAGNAME="=if(And(len(trim(AO#[1]))=0,len(trim(AP#[1]))=0),&quot;ALLLEDGERENTRIES.LIST&quot;,&quot;&quot;)">
			<LEDGERNAME COLUMNREFERENCE="BK"/>
			<ISDEEMEDPOSITIVE FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),&quot;Yes&quot;,&quot;No&quot;)"/>
			<AMOUNT FORMULA="={Round(BL#,2)}*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),-1,1)"/>
		</LEDGERENTRIES.LIST>
		<!-- Ledger2 before taxes -->
		<LEDGERENTRIES.LIST GROUPBY="=trim(BM#)" SKIP="={Round(BN#,2)}=0" ALTERNATETAGNAME="=if(And(len(trim(AO#[1]))=0,len(trim(AP#[1]))=0),&quot;ALLLEDGERENTRIES.LIST&quot;,&quot;&quot;)">
			<LEDGERNAME COLUMNREFERENCE="BM"/>
			<ISDEEMEDPOSITIVE FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),&quot;Yes&quot;,&quot;No&quot;)"/>
			<AMOUNT FORMULA="={Round(BN#,2)}*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),-1,1)"/>
		</LEDGERENTRIES.LIST>
		<!-- Ledger3 before taxes -->
		<LEDGERENTRIES.LIST GROUPBY="=trim(BO#)" SKIP="={Round(BP#,2)}=0" ALTERNATETAGNAME="=if(And(len(trim(AO#[1]))=0,len(trim(AP#[1]))=0),&quot;ALLLEDGERENTRIES.LIST&quot;,&quot;&quot;)">
			<LEDGERNAME COLUMNREFERENCE="BO"/>
			<ISDEEMEDPOSITIVE FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),&quot;Yes&quot;,&quot;No&quot;)"/>
			<AMOUNT FORMULA="={Round(BP#,2)}*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),-1,1)"/>
		</LEDGERENTRIES.LIST>
		<!-- Ledger4 before taxes -->
		<LEDGERENTRIES.LIST GROUPBY="=trim(BQ#)" SKIP="={Round(BR#,2)}=0" ALTERNATETAGNAME="=if(And(len(trim(AO#[1]))=0,len(trim(AP#[1]))=0),&quot;ALLLEDGERENTRIES.LIST&quot;,&quot;&quot;)">
			<LEDGERNAME COLUMNREFERENCE="BQ"/>
			<ISDEEMEDPOSITIVE FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),&quot;Yes&quot;,&quot;No&quot;)"/>
			<AMOUNT FORMULA="={Round(BR#,2)}*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),-1,1)"/>
		</LEDGERENTRIES.LIST>
		<!-- Ledger5 before taxes -->
		<LEDGERENTRIES.LIST GROUPBY="=trim(BS#)" SKIP="={Round(BT#,2)}=0" ALTERNATETAGNAME="=if(And(len(trim(AO#[1]))=0,len(trim(AP#[1]))=0),&quot;ALLLEDGERENTRIES.LIST&quot;,&quot;&quot;)">
			<LEDGERNAME COLUMNREFERENCE="BS"/>
			<ISDEEMEDPOSITIVE FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),&quot;Yes&quot;,&quot;No&quot;)"/>
			<AMOUNT FORMULA="={Round(BT#,2)}*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),-1,1)"/>
		</LEDGERENTRIES.LIST>
		<!-- IGST Ledger -->
		<LEDGERENTRIES.LIST GROUPBY="=if(len(trim(CE#))=0,trim(BU#),trim(CE#))" SKIP="={Round(BV#,2)}=0" ALTERNATETAGNAME="=if(And(len(trim(AO#[1]))=0,len(trim(AP#[1]))=0),&quot;ALLLEDGERENTRIES.LIST&quot;,&quot;&quot;)">
			<LEDGERNAME FORMULA="=if(len(trim(CE#))&gt;0,CE#,if(Or(IsError(Round(BU#,2)),len(trim(BU#))=0,BU#=0),&quot;&quot;,&quot;IGST &quot; &amp; BU# &amp; &quot;%&quot;))"/>
			<ISDEEMEDPOSITIVE FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),&quot;Yes&quot;,&quot;No&quot;)"/>
			<AMOUNT FORMULA="={Round(BV#,2)}*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),-1,1)"/>
		</LEDGERENTRIES.LIST>
		<!-- CGST Ledger -->
		<LEDGERENTRIES.LIST GROUPBY="=if(len(trim(CF#))=0,trim(BW#),trim(CF#))" SKIP="={Round(BX#,2)}=0" ALTERNATETAGNAME="=if(And(len(trim(AO#[1]))=0,len(trim(AP#[1]))=0),&quot;ALLLEDGERENTRIES.LIST&quot;,&quot;&quot;)">
			<LEDGERNAME FORMULA="=if(len(trim(CF#))&gt;0,CF#,if(Or(IsError(Round(BW#,2)),len(trim(BW#))=0,BW#=0),&quot;&quot;,&quot;CGST &quot; &amp; BW# &amp; &quot;%&quot;))"/>
			<ISDEEMEDPOSITIVE FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),&quot;Yes&quot;,&quot;No&quot;)"/>
			<AMOUNT FORMULA="={Round(BX#,2)}*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),-1,1)"/>
		</LEDGERENTRIES.LIST>
		<!-- SGST Ledger -->
		<LEDGERENTRIES.LIST GROUPBY="=if(len(trim(CG#))=0,trim(BY#),trim(CG#))" SKIP="={Round(BZ#,2)}=0" ALTERNATETAGNAME="=if(And(len(trim(AO#[1]))=0,len(trim(AP#[1]))=0),&quot;ALLLEDGERENTRIES.LIST&quot;,&quot;&quot;)">
			<LEDGERNAME FORMULA="=if(len(trim(CG#))&gt;0,CG#,if(Or(IsError(Round(BY#,2)),len(trim(BY#))=0,BY#=0),&quot;&quot;,&quot;SGST &quot; &amp; BY# &amp; &quot;%&quot;))"/>
			<ISDEEMEDPOSITIVE FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),&quot;Yes&quot;,&quot;No&quot;)"/>
			<AMOUNT FORMULA="={Round(BZ#,2)}*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),-1,1)"/>
		</LEDGERENTRIES.LIST>
		<!-- UT Ledger -->
		<LEDGERENTRIES.LIST GROUPBY="=if(len(trim(CH#))=0,trim(CA#),trim(CH#))" SKIP="={Round(CB#,2)}=0" ALTERNATETAGNAME="=if(And(len(trim(AO#[1]))=0,len(trim(AP#[1]))=0),&quot;ALLLEDGERENTRIES.LIST&quot;,&quot;&quot;)">
			<LEDGERNAME FORMULA="=if(len(trim(CH#))&gt;0,CH#,if(Or(IsError(Round(CA#,2)),len(trim(CA#))=0,CA#=0),&quot;&quot;,&quot;UT &quot; &amp; CA# &amp; &quot;%&quot;))"/>
			<ISDEEMEDPOSITIVE FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),&quot;Yes&quot;,&quot;No&quot;)"/>
			<AMOUNT FORMULA="={Round(CB#,2)}*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),-1,1)"/>
		</LEDGERENTRIES.LIST>
		<!-- Cess Ledger -->
		<LEDGERENTRIES.LIST GROUPBY="=if(len(trim(CI#))=0,trim(CC#),trim(CI#))" SKIP="={Round(CD#,2)}=0" ALTERNATETAGNAME="=if(And(len(trim(AO#[1]))=0,len(trim(AP#[1]))=0),&quot;ALLLEDGERENTRIES.LIST&quot;,&quot;&quot;)">
			<LEDGERNAME FORMULA="=if(len(trim(CI#))&gt;0,CI#,if(Or(IsError(Round(CC#,2)),len(trim(CC#))=0,CC#=0),&quot;&quot;,&quot;Cess &quot; &amp; CC# &amp; &quot;%&quot;))"/>
			<ISDEEMEDPOSITIVE FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),&quot;Yes&quot;,&quot;No&quot;)"/>
			<AMOUNT FORMULA="={Round(CD#,2)}*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),-1,1)"/>
		</LEDGERENTRIES.LIST>
		<!-- Ledger1 -->
		<LEDGERENTRIES.LIST GROUPBY="=trim(CJ#)" SKIP="={Round(CK#,2)}=0" ALTERNATETAGNAME="=if(And(len(trim(AO#[1]))=0,len(trim(AP#[1]))=0),&quot;ALLLEDGERENTRIES.LIST&quot;,&quot;&quot;)">
			<LEDGERNAME COLUMNREFERENCE="CJ"/>
			<ISDEEMEDPOSITIVE FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),&quot;Yes&quot;,&quot;No&quot;)"/>
			<AMOUNT FORMULA="={Round(CK#,2)}*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),-1,1)"/>
		</LEDGERENTRIES.LIST>
		<!-- Ledger2 -->
		<LEDGERENTRIES.LIST GROUPBY="=trim(CL#)" SKIP="={Round(CM#,2)}=0" ALTERNATETAGNAME="=if(And(len(trim(AO#[1]))=0,len(trim(AP#[1]))=0),&quot;ALLLEDGERENTRIES.LIST&quot;,&quot;&quot;)">
			<LEDGERNAME COLUMNREFERENCE="CL"/>
			<ISDEEMEDPOSITIVE FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),&quot;Yes&quot;,&quot;No&quot;)"/>
			<AMOUNT FORMULA="={Round(CM#,2)}*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),-1,1)"/>
		</LEDGERENTRIES.LIST>
		<!-- Ledger3 -->
		<LEDGERENTRIES.LIST GROUPBY="=trim(CN#)" SKIP="={Round(CO#,2)}=0" ALTERNATETAGNAME="=if(And(len(trim(AO#[1]))=0,len(trim(AP#[1]))=0),&quot;ALLLEDGERENTRIES.LIST&quot;,&quot;&quot;)">
			<LEDGERNAME COLUMNREFERENCE="CN"/>
			<ISDEEMEDPOSITIVE FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),&quot;Yes&quot;,&quot;No&quot;)"/>
			<AMOUNT FORMULA="={Round(CO#,2)}*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),-1,1)"/>
		</LEDGERENTRIES.LIST>
		<!-- Ledger4 -->
		<LEDGERENTRIES.LIST GROUPBY="=trim(CP#)" SKIP="={Round(CQ#,2)}=0" ALTERNATETAGNAME="=if(And(len(trim(AO#[1]))=0,len(trim(AP#[1]))=0),&quot;ALLLEDGERENTRIES.LIST&quot;,&quot;&quot;)">
			<LEDGERNAME COLUMNREFERENCE="CP"/>
			<ISDEEMEDPOSITIVE FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),&quot;Yes&quot;,&quot;No&quot;)"/>
			<AMOUNT FORMULA="={Round(CQ#,2)}*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),-1,1)"/>
		</LEDGERENTRIES.LIST>
		<!-- Ledger5 -->
		<LEDGERENTRIES.LIST GROUPBY="=trim(CR#)" SKIP="={Round(CS#,2)}=0" ALTERNATETAGNAME="=if(And(len(trim(AO#[1]))=0,len(trim(AP#[1]))=0),&quot;ALLLEDGERENTRIES.LIST&quot;,&quot;&quot;)">
			<LEDGERNAME COLUMNREFERENCE="CR"/>
			<ISDEEMEDPOSITIVE FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),&quot;Yes&quot;,&quot;No&quot;)"/>
			<AMOUNT FORMULA="={Round(CS#,2)}*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),-1,1)"/>
		</LEDGERENTRIES.LIST>
		<!-- Round Off Ledger -->
		<LEDGERENTRIES.LIST SKIP="=Or(Not(trim(DR#)=&quot;yes&quot;),Round(Round({Round(AX#,2)-Round(AZ#,2)+Round(BV#,2)+Round(BX#,2)+Round(BZ#,2)+Round(CB#,2)+Round(CD#,2)}+{Round(BL#+BN#+BP#+BR#+BT#,2)}+{Round(CK#+CM#+CO#+CQ#+CS#,2)},0)-Round({Round(AX#,2)-Round(AZ#,2)+Round(BV#,2)+Round(BX#,2)+Round(BZ#,2)+Round(CB#,2)+Round(CD#,2)}+{Round(BL#+BN#+BP#+BR#+BT#,2)}+{Round(CK#+CM#+CO#+CQ#+CS#,2)},2),2)=0)" ALTERNATETAGNAME="=if(And(len(trim(AO#[1]))=0,len(trim(AP#[1]))=0),&quot;ALLLEDGERENTRIES.LIST&quot;,&quot;&quot;)">
			<LEDGERNAME FORMULA="=if(len(trim(DS#))=0,&quot;Round Off&quot;,DS#)"/>
			<ISDEEMEDPOSITIVE FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),&quot;Yes&quot;,&quot;No&quot;)"/>
			<AMOUNT FORMULA="=Round(Round({Round(AX#,2)-Round(AZ#,2)+Round(BV#,2)+Round(BX#,2)+Round(BZ#,2)+Round(CB#,2)+Round(CD#,2)}+{Round(BL#+BN#+BP#+BR#+BT#,2)}+{Round(CK#+CM#+CO#+CQ#+CS#,2)},0)-Round({Round(AX#,2)-Round(AZ#,2)+Round(BV#,2)+Round(BX#,2)+Round(BZ#,2)+Round(CB#,2)+Round(CD#,2)}+{Round(BL#+BN#+BP#+BR#+BT#,2)}+{Round(CK#+CM#+CO#+CQ#+CS#,2)},2),2)*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),-1,1)"/>
		</LEDGERENTRIES.LIST>
		<!-- StockItems -->
		<ALLINVENTORYENTRIES.LIST SCROLL="YES" SKIP="=And(len(trim(AO#))=0,len(trim(AP#))=0)">
			<BASICUSERDESCRIPTION.LIST SKIP="=And(len(trim(BB#))=0,len(trim(BC#))=0,len(trim(BD#))=0)">
				<BASICUSERDESCRIPTION COLUMNREFERENCE="BB"/>
				<BASICUSERDESCRIPTION COLUMNREFERENCE="BC"/>
				<BASICUSERDESCRIPTION COLUMNREFERENCE="BD"/>
			</BASICUSERDESCRIPTION.LIST>
			<STOCKITEMNAME FORMULA="=if(len(trim(AP#))=0,AO#,AP#)"/>
			<ISDEEMEDPOSITIVE FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),&quot;Yes&quot;,&quot;No&quot;)"/>
			<RATE SKIP="=DP#=&quot;yes&quot;" COLUMNREFERENCE="AV"/>
			<RATE SKIP="=Not(DP#=&quot;yes&quot;)" FORMULA="=AV# &amp; &quot;/&quot; &amp; AS#"/>
			<DISCOUNT COLUMNREFERENCE="AW"/>
			<AMOUNT FORMULA="=Round(AX#,2)*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),-1,1)"/>
			<ACTUALQTY SKIP="=DP#=&quot;yes&quot;" FORMULA="=if(len(trim(AT#))=0,AU#,AT#)"/>
			<BILLEDQTY SKIP="=DP#=&quot;yes&quot;" COLUMNREFERENCE="AU"/>
			<ACTUALQTY SKIP="=Not(DP#=&quot;yes&quot;)" FORMULA="=if(len(trim(AT#))=0,AU#,AT#) &amp; &quot; &quot; &amp; AS#"/>
			<BILLEDQTY SKIP="=Not(DP#=&quot;yes&quot;)" FORMULA="=AU# &amp; &quot; &quot; &amp; AS#"/>
			<ACCOUNTINGALLOCATIONS.LIST>
				<LEDGERNAME FORMULA="=if(len(trim(BH#))&gt;0,BH#,if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;debit note&quot;\125,0))),&quot;PURCHASE &quot;,&quot;SALE &quot;) &amp; (BU#+BW#+BY#) &amp; &quot;%&quot;)"/>
				<ISDEEMEDPOSITIVE FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),&quot;Yes&quot;,&quot;No&quot;)"/>
				<AMOUNT FORMULA="=Round(AX#,2)*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),-1,1)"/>
				<!-- 
        Tax Classification - Override at Voucher level 
        Applicable to Sales/Purchase with Stockitems only as tested in Tally ERP 9 Release 6.1
        -->
				<GSTOVRDNNATURE COLUMNREFERENCE="CX"/>
				<GSTOVRDNASSESSABLEVALUE SKIP="=Round(DD#,2)=0" FORMULA="=Round(DD#,2)*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),-1,1)"/>
				<RATEDETAILS.LIST>
					<GSTRATEDUTYHEAD>Integrated Tax</GSTRATEDUTYHEAD>
					<GSTRATEVALUATIONTYPE>Based on Value</GSTRATEVALUATIONTYPE>
					<GSTRATE COLUMNREFERENCE="CY"/>
				</RATEDETAILS.LIST>
				<RATEDETAILS.LIST>
					<GSTRATEDUTYHEAD>Central Tax</GSTRATEDUTYHEAD>
					<GSTRATEVALUATIONTYPE>Based on Value</GSTRATEVALUATIONTYPE>
					<GSTRATE COLUMNREFERENCE="CZ"/>
				</RATEDETAILS.LIST>
				<RATEDETAILS.LIST>
					<GSTRATEDUTYHEAD FORMULA="=if(Round(DB#,2)=0,&quot;State Tax&quot;,&quot;UT Tax&quot;)"/>
					<GSTRATEVALUATIONTYPE>Based on Value</GSTRATEVALUATIONTYPE>
					<GSTRATE FORMULA="=if(Round(DB#,2)=0,DA#,DB#)"/>
				</RATEDETAILS.LIST>
				<RATEDETAILS.LIST>
					<GSTRATEDUTYHEAD>Cess</GSTRATEDUTYHEAD>
					<GSTRATEVALUATIONTYPE>Based on Value</GSTRATEVALUATIONTYPE>
					<GSTRATE COLUMNREFERENCE="DC"/>
				</RATEDETAILS.LIST>
				<!-- Cost centre details -->
				<CATEGORYALLOCATIONS.LIST SKIP="=len(trim(BJ#))=0">
					<CATEGORY FORMULA="=if(len(trim(BI#))=0,&quot;Primary Cost Category&quot;,BI#)"/>
					<ISDEEMEDPOSITIVE FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),&quot;Yes&quot;,&quot;No&quot;)"/>
					<COSTCENTREALLOCATIONS.LIST>
						<NAME COLUMNREFERENCE="BJ"/>
						<AMOUNT FORMULA="=Round(AX#,2)*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),-1,1)"/>
					</COSTCENTREALLOCATIONS.LIST>
				</CATEGORYALLOCATIONS.LIST>
			</ACCOUNTINGALLOCATIONS.LIST>
			<BATCHALLOCATIONS.LIST>
				<!-- Godown details -->
				<GODOWNNAME FORMULA="=if(len(trim(AN#))=0,&quot;Main Location&quot;,AN#)"/>
				<DESTINATIONGODOWNNAME FORMULA="=if(len(trim(AN#))=0,&quot;Main Location&quot;,AN#)"/>
				<!-- Batch details -->
				<BATCHNAME FORMULA="=if(len(trim(BE#))=0,&quot;Primary Batch&quot;,BE#)"/>
				<MFDON SKIP="=Len(trim(BF#))=0" COLUMNREFERENCE="BF"/>
				<EXPIRYPERIOD SKIP="=Len(trim(BG#))=0" COLUMNREFERENCE="BG"/>
				<AMOUNT FORMULA="=Round(AX#,2)*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),-1,1)"/>
				<ACTUALQTY FORMULA="=if(len(trim(AT#))=0,AU#,AT#)"/>
				<BILLEDQTY COLUMNREFERENCE="AU"/>
				<!-- For Sales Order and Purchase Order - Column F# -->
				<!-- For Delivery Note, Sales Invoice, Receipt Note, Purchase Invoice - Column AD# -->
				<ORDERNO FORMULA="=if(Or(trim(lower(B#[1]))=&quot;sales order&quot;,trim(lower(B#[1]))=&quot;purchase order&quot;),F#[1],AD#[1])"/>
				<!-- For Sales Order and Purchase Order - Column E# -->
				<!-- For Delivery Note, Sales Invoice, Receipt Note, Purchase Invoice - Column AE# -->
				<ORDERDUEDATE FORMULA="=if(Or(trim(lower(B#[1]))=&quot;sales order&quot;,trim(lower(B#[1]))=&quot;purchase order&quot;),E#[1],AE#[1])"/>
				<!-- For Delivery Note, Sales Invoice, Receipt Note, Purchase Invoice -->
				<TRACKINGNUMBER SKIP="=IsError(Match(trim(B#[1]),\123&quot;delivery note&quot;,&quot;sales&quot;,&quot;receipt note&quot;,&quot;purchase&quot;\125,0))" COLUMNREFERENCE="AF"/>
			</BATCHALLOCATIONS.LIST>
			<UDF:EIDISCOUNTRATE.LIST SKIP="=Round(AY#,2)=0" DESC="`EI DiscountRate`" ISLIST="YES" TYPE="Number" INDEX="10001">
			 <UDF:EIDISCOUNTRATE DESC="`EI DiscountRate`" COLUMNREFERENCE="AY"/>
			</UDF:EIDISCOUNTRATE.LIST>
			<UDF:EIDISCOUNTAMT.LIST SKIP="=Round(AZ#,2)=0" DESC="`EI DiscountAmt`" ISLIST="YES" TYPE="Amount" INDEX="10003">
			 <UDF:EIDISCOUNTAMT DESC="`EI DiscountAmt`" COLUMNREFERENCE="AZ"/>
			</UDF:EIDISCOUNTAMT.LIST>

		</ALLINVENTORYENTRIES.LIST>
	</VOUCHER8>
</XMLTAGS>

